// File: fifo_4_4_16.v
// Generated by MyHDL 1.0dev
// Date: Mon Dec 12 19:09:39 2016


`timescale 1ns/10ps

module fifo_4_4_16 (
    clk,
    wenable,
    renable,
    din,
    dout,
    rdout,
    outbusy,
    inbusy
);


input clk;
input wenable;
input renable;
input [3:0] din;
output [3:0] dout;
reg [3:0] dout;
output rdout;
reg rdout;
output outbusy;
reg outbusy;
output inbusy;
reg inbusy;

reg [3:0] out_addr;
reg [3:0] in_addr;
reg [3:0] mem [0:16-1];



always @(posedge clk) begin: FIFO_4_4_16_WRITE_DATA
    if (wenable) begin
        mem[in_addr[4-1:0]] <= din;
        in_addr <= (in_addr + 4'h1);
    end
end


always @(out_addr, in_addr) begin: FIFO_4_4_16_CHK_FLOW
    integer diff;
    diff = (in_addr - out_addr);
    if ((diff == 0)) begin
        outbusy = (1 != 0);
    end
    else begin
        outbusy = (0 != 0);
    end
    if ((out_addr == ((in_addr + 4'h1) % 16))) begin
        inbusy = (1 != 0);
    end
    else begin
        inbusy = (0 != 0);
    end
end


always @(posedge clk) begin: FIFO_4_4_16_READ_DATA
    if (renable) begin
        dout <= mem[out_addr[4-1:0]];
        out_addr <= (out_addr + 4'h1);
        rdout <= renable;
    end
    else begin
        rdout <= (0 != 0);
    end
end

endmodule
